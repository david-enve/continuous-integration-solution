---
- name: gather package facts
  package_facts:
    manager: apt

- name: install jenkins-job-builder package if it is absent
  apt:
    name: jenkins-job-builder
    update_cache: yes
    state: present
  when: '"jenkins-job-builder" not in ansible_facts.packages'

- name: define jenkins_jobs directory
  set_fact:
    jenkins_jobs_path: /etc/jenkins_jobs

- name: create jenkins_jobs directory
  file:
    path: "{{ jenkins_jobs_path }}"
    state: directory
    recurse: yes
    owner: "jenkins"
    group: "jenkins"
    mode: "0755"

- name: execute script.groovy script under files directory to create a new api token
  jenkins_script:
    script: "{{ lookup('file', 'files/script.groovy') }}"
    user: "{{ jenkins_user }}"
    password: "{{ jenkins_password }}"
    url: "{{ jenkins_url }}"
    validate_certs: no
  register: token_result

- debug:
    var: token_result.output

- set_fact:
    jenkins_api_token: "{{ token_result.output }}"

- name: adding jenkins_jobs conf file under /etc/jenkins_jobs directory
  template:
    src: "jenkins_jobs.j2"
    dest: "{{ jenkins_jobs_path }}/jenkins_jobs.ini"
    owner: "jenkins"
    group: "jenkins"
    mode: "0600"

- name: adding jenkins_jobs yml file for all defined jobs to be created
  copy:
    src: "jenkins_jobs.yml"
    dest: "{{ jenkins_jobs_path }}/jenkins_jobs.yml"
    owner: "jenkins"
    group: "jenkins"
    mode: "0600"

- name: creating a new defined jenkins job
  shell: |
    cd {{ jenkins_jobs_path }} &&
    sudo jenkins-jobs --conf jenkins_jobs.ini {{ action }} jenkins_jobs.yml
  when: action == 'update'

- name: delete a jenkins job
  shell: |
    cd {{ jenkins_jobs_path }} &&
    sudo jenkins-jobs --conf jenkins_jobs.ini {{ action }} {{ job }}
  when: action == 'delete'

